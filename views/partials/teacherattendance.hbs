 <style>
        /* Style for circular checkbox */
        .custom-checkbox {
            display: inline-block;
            position: relative;
            width: 20px;
            height: 20px;
            border: 2px solid #333;
            border-radius: 50%;
            cursor: pointer;
        }

        /* Hide default checkbox */
        .custom-checkbox input {
            display: none;
        }

        /* Style for the checkmark inside the circular checkbox */
        .custom-checkbox .checkmark {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: transparent;
            border: 2px solid #333;
            transition: background-color 0.3s;
        }

        /* Change background color when checkbox is checked */
        .custom-checkbox input:checked + .checkmark {
            background-color: green;
            border: 2px solid green;
        }
</style>


<nav class="navbar navbar-light justify-content-center">
    <div class="container-fluid d-flex justify-content-center">
        <button class="btn btn-dark" data-toggle="modal" data-target="#AddModal">Add Teacher</button>
        &nbsp; &nbsp; &nbsp;
        <input class="form-control me-2" type="search" id="searchDataBox"  placeholder="Search" aria-label="Search" name="search" onchange="Search()" id="search" autofocus style="width: 150px;">
        &nbsp;<button class="btn btn-dark"><i class="bi-search"></i></button> 
 &nbsp; &nbsp; &nbsp;
  <form action="/teachersattendance" method="post">
        <input type="date" name="date" id="date" class="form-control" style="width: min-content;">
        <!-- Button to open modal -->

       
        
       
    </div>
</nav>

{{#each data}}
{{#each this}}
{{#if this.name}}
<input type="text"  id="id{{this.name}}" name="id" style="display: none;" value="{{this._id}}">
<input type="text"  id="category{{this.name}}" name="category" style="display: none;" value="{{this.name}}">
<input type="text"  id="regional{{this.name}}" name="regional" style="display: none;" value="{{this.regional_name}}">
<input type="text"  id="active{{this.name}}" name="active" style="display: none;" value="{{this.status}}">
{{/if}}
{{/each}}
{{/each}}

<!--dummy elements over-->

<div class="container scrollable-container">
    {{name}}
    <div class="table-responsive-sm">
        <center>
    <table class="table  table-light table-hover" style="width: 90%;" id="dataTable" >
        <thead>
            <tr>
                <th scope="col">Admission No</th>
                <th scope="col">Name</th>
                <th scope="col">Present</th>
                <th scope="col">Absent</th>
                <th scope = "col">Current Attendance%</th>
            </tr>
        </thead>
       
        <tbody id="dataBody">
            {{#each data}}
            
            
            {{#each this}}
            {{#if this.name}}
            <tr id="{{this.name}}">
                
                <td>
                    {{this.code}}
                </td>
                <td>
                    {{this.name}}
                </td>
                <td>
                    <label class="custom-checkbox">
                    <input type="checkbox" name="present" value="{{this.code}}present">
                    <span class="checkmark"></span>
                    </label>
                </td>
                <td>
                    <label class="custom-checkbox">
                    <input type="checkbox" name="present" value="{{this.code}}absent">
                    <span class="checkmark"></span>
                    </label>
                </td>
                <td>
                     {{this.attendance}}
                    <a href="/detailedteacherview?id={{this.code}}" style="color: rgb(77, 77, 218);">Detailed View</a>
                </td>
            {{/if}}
            {{/each}}
            </tr>
        
           
            {{/each}}
        </tbody>
    </table>
    </center>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        // Function to filter second table rows based on search box input
        $('#searchDataBox').on('input', function () {
            var searchText = $(this).val().toLowerCase();

            $('#dataBody tr').each(function () {
                var nameText = $(this).find('td:eq(1)').text().toLowerCase();

                if (nameText.includes(searchText)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        });
    });
</script>


<hr>
<center>

<div class="container">
<button type="submit" class="btn btn-success">Submit</button>
</form>
</div>
</center>


<!-- Modal -->
<div class="modal fade" id="AddModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLongTitle">Add Teacher Details</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="form-group">
            <form action="/addteacher" method="post">
                    <div class="form-group">
                        <label for="name">Name:</label>
                        <input type="text" class="form-control" id="name" name="name" required>
                    </div>
                    <div class="form-group">
                        <label for="course">Course:</label>
                        <select class="form-control" id="course" name="course" required>
                            {{#each Courses}}
                            {{#each this}}
                            {{#if this.name}}
                            <option value="{{this.name}}">{{this.name}}</option>
                            {{/if}}
                            {{/each}}
                            {{/each}}
                            <!-- Add more options as needed -->
                        </select>
                        
                    </div>

                    <div class="form-group">
                        <label for="code">Code:</label>
                        <input type="text" class="form-control" id="code" name="code" required>
                    </div>

                    <div class="form-group">
                        <label for="startDate">Start Date:</label>
                        <input type="date" class="form-control" id="startDate" name="startDate" required>
                    </div>

                    <div class="form-group">
                        <label for="dob">DOB:</label>
                        <input type="date" class="form-control" id="dob" name="dob" required>
                    </div>

                    <div class="form-group">
                        <label for="age">Age:</label>
                        <input type="number" class="form-control" id="age" name="age" required>
                    </div>

                    
            
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary">Save changes</button>
        </form>
      </div>
    </div>
  </div>
</div>


 

<script>
    // Get the modal and buttons
    const modal = document.getElementById("AddModal");
    const openModalBtn = document.getElementById("openModalBtn");
    const closeModalBtn = document.getElementById("closeModalBtn");

    // Event listeners
    openModalBtn.addEventListener("click", () => {
        modal.style.display = "flex";
    });

    closeModalBtn.addEventListener("click", () => {
        modal.style.display = "none";
    });

    window.addEventListener("click", (event) => {
        if (event.target === modal) {
            modal.style.display = "none";
        }
    });

    // Form submission
    const modalForm = document.getElementById("modalForm");
    const dataTable = document.getElementById("dataTable");
    const dataBody = document.getElementById("dataBody");

    modalForm.addEventListener("submit", (event) => {
        event.preventDefault();

        // Get form data
        const formData = new FormData(modalForm);

        // Create a new row in the table
        const newRow = document.createElement("tr");

        // Append table cells with form data
        formData.forEach((value, key) => {
            const cell = document.createElement("td");
            cell.textContent = value;
            newRow.appendChild(cell);
        });

        // Append the new row to the table body
        dataBody.appendChild(newRow);

        // Close the modal
        modal.style.display = "none";

        // You can add the fetch request here to send data to the server
        console.log(formData)
        // For example:
         fetch('/addteacher', {
             method: 'POST',
             body: formData
         }).then(response => response.json()).then(data => {
             console.log('Success:', data);
         }).catch(error => {
            console.error('Error:', error);
         });
    });
</script>

<!-- Include this script in your HTML file -->
<script>
     var currentDate = new Date();
    var year = currentDate.getFullYear();
    var month = String(currentDate.getMonth() + 1).padStart(2, '0'); // Adding 1 because months are 0-based
    var day = String(currentDate.getDate()).padStart(2, '0');

    var formattedDate = year + '-' + month + '-' + day;

    document.getElementById('date').value = formattedDate;
    
        // Function to handle form submission
        function submitForm() {
            // Get form element
            const form = document.getElementById('addform');
            
            document.getElementById("sendalert").hidden = false;
            console.log("submit")

           // console.log(form);

            // Check if required fields are filled
            if (form.checkValidity()) {
                // If all required fields are filled, proceed with form submission
                var formData = new FormData(form);
                
                // You can add additional logic here, such as AJAX submission
                // Example using fetch API:
                fetch('/vendor/add-category', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                     if (!response.ok) {
                         throw new Error('Network response was not ok');
                    }
        
                     return response.json();
                    // Handle the response, e.g., show success message or handle errors
                    
                }).then(data => {
                    console.log(data);
                    document.getElementById("sendalert").hidden = true;
                    document.getElementById("successalert").hidden = false;
                    setTimeout(function () {
                    document.getElementById("successalert").hidden = true;
                    }, 1000);
                    // Handle the successful response
       
        
                setTimeout(function () {
                    location.reload();
                }, 1000);
                }).catch(error => {
                    console.error('Error:', error);
                });
            } else {
                // If required fields are not filled, prevent form submission and show an alert or error message
                alert('Please fill in all required fields.');
            }
        }
        
   

</script>



<script>
    names = []
    const relation = new Map();
    datamap = []
{{#each data}}
{{#each this}}
{{#if this.name}}
names.push(document.getElementById({{@../index}}).value);
c = document.getElementById({{@../index}}).value;
d = {
    name : document.getElementById("category"+c).value,
    regional : document.getElementById("regional"+c).value,
    status : document.getElementById("active"+c).value,
}
datamap.push(d);
//there is an error that this.name can't be assigned directly to names array so the above code is a fix to this, 
//follow the method for storing data
{{/if}}
{{/each}}
{{/each}}
//console.log(names);


function Search()
{
    pattern = document.getElementById("search").value;
    pattern = pattern.toLowerCase();
    console.log(pattern)
    if(pattern==""){
         for(i=0;i<names.length;i++)
        {
            document.getElementById(names[i]).hidden = false;
        }
    }
    else{
    for(i=0;i<names.length;i++)
    {
        text  = names[i].toLowerCase();
        console.log(text.includes(pattern));
        if(text.includes(pattern)==false)
        {
            console.log(names[i])
            document.getElementById(names[i]).hidden = true;
        }
        else{
            document.getElementById(names[i]).hidden = false;
        }
    }
    }
}

</script>



<script>
    document.addEventListener('DOMContentLoaded', function () {
    // Event listener for checkbox clicks
    document.querySelectorAll('.custom-checkbox input[type="checkbox"]').forEach(function (checkbox) {
        checkbox.addEventListener('click', function () {
            // Uncheck all checkboxes in the same row
            uncheckOtherCheckboxesInRow(checkbox);
        });
    });

    // Function to uncheck other checkboxes in the same row
    function uncheckOtherCheckboxesInRow(clickedCheckbox) {
        var row = clickedCheckbox.closest('tr');
        var checkboxesInRow = row.querySelectorAll('.custom-checkbox input[type="checkbox"]');
        
        checkboxesInRow.forEach(function (checkbox) {
            if (checkbox !== clickedCheckbox) {
                checkbox.checked = false;
            }
        });
    }

    // Rest of your code...
});
</script>